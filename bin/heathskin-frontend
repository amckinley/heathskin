#!/usr/bin/env python

import json
from datetime import datetime
import pickle
import argparse
import sys

import logging
from logging import StreamHandler, Formatter

from flask import Flask, render_template, session, request, \
    jsonify, abort, make_response
from flask.ext.sqlalchemy import SQLAlchemy
from flask.ext.security import Security, SQLAlchemyUserDatastore, \
    UserMixin, RoleMixin, login_required, auth_token_required
from flask.ext.login import current_user


from heathskin import game_state, card_database
from heathskin import game_universe

from heathskin.frontend import db, app

if __name__ == '__main__':
    logger = app.logger
    logger.setLevel(logging.INFO)

    parser = argparse.ArgumentParser(description='Track some skins')
    parser.add_argument('--port-offset')
    parser.add_argument('--debug', action='store_true')
    args = parser.parse_args()

    port = 3000
    if args.port_offset:
        port += int(args.port_offset)

    # make flask app's logger behave reasonably and write to stdout
    handler = StreamHandler()
    handler.setLevel(logging.INFO)
    FORMAT_STRING = "{pid=%(process)d} %(asctime)s %(levelname)s [%(filename)s:%(lineno)d] %(message)s"
    fmtr = Formatter(fmt=FORMAT_STRING)
    handler.setFormatter(fmtr)
    app.logger.addHandler(handler)

    # SHUT THE FUCK UP
    log = logging.getLogger('werkzeug')
    log.setLevel(logging.ERROR)

    db.create_all()
    try:
        logger.info("Starting server...")
        app.run(port=port, host="127.0.0.1")
    except Exception as e:
        logger.error("lol crashing")
        sys.exit(-1)
