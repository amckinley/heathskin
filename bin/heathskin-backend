#!/usr/bin/env python

import logging
import redis
import argparse
import json
import os
from datetime import datetime

from heathskin.game_state import GameState

# XXX: stupid hack to make piping of utf-8 stdout work correctly.
# this might break everything: http://stackoverflow.com/a/17628350
import sys
reload(sys)
sys.setdefaultencoding('UTF8')



REDIS_QUEUE_NAME = "log_queue"
SESSION_LOG_ROOT = "session_logs"

def get_session_log_path(log_data):
    return os.path.join(SESSION_LOG_ROOT, log_data['user_id'], log_data['session_start'])

def main(args):
    log_fmt = "%(asctime)s %(levelname)s [%(filename)s:%(lineno)d] %(message)s"

    if args.debug:
        level = logging.DEBUG
    else:
        level = logging.INFO

    logging.basicConfig(level=level, format=log_fmt)

    logger = logging.getLogger()

    redis_conn = redis.StrictRedis(host='localhost', port=6379, db=0)
    sessions = {}

    while True:
        key_name, line_data = redis_conn.blpop(REDIS_QUEUE_NAME)
        line_data = json.loads(line_data)
        print line_data
        session_key = (line_data['user_id'], line_data['session_start'])
        if session_key not in sessions:
            logger.info("Starting new session: %s", session_key)

            session_log_path = get_session_log_path(line_data)
            session_log_dir = os.path.dirname(session_log_path)
            if not os.path.exists(session_log_dir):
                os.makedirs(session_log_dir)

            file_handle = open(session_log_path, 'a')

            sessions[session_key] = {
                'last_seen_at': datetime.now(),
                'file_handle': file_handle,
                'game_state': GameState()
            }

        session = sessions[session_key]

        session['game_state'].feed_line(line_data['log_line'].rstrip())
        session['last_seen_at'] = datetime.now()
        session['file_handle'].write(line_data['log_line'])

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Track some skins')
    parser.add_argument('--debug', default=False, action='store_true')
    args = parser.parse_args()

    main(args)
